import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vRyvZ7lknwiSghK9aen1SaTEYoN3JS40rrGLpcyrsVZy1tB2T4gn6Y3-dzPUFCPMmmqREWefW3kl4_/pub?output=csv"
data = pd.read_csv(url)


# Display the first 5 rows of the dataset
print(data.head())

# Check for missing values
print(data.isnull().sum())

# Remove rows with missing values
data = data.dropna()


# Visualize the distribution of the population across countries
plt.figure(figsize=(12,6))
sns.histplot(data['Population']).set_title('Distribution of Population across Countries')
plt.show()

# Visualize the relationship between the population and the years
plt.figure(figsize=(12,6))
sns.scatterplot(data['Year'], data['Population']).set_title('Population vs Years')
plt.xlabel('Year')
plt.ylabel('Population')
plt.show()


# Define the features and the target variable
X = data[['Year']]
y = data['Population']

# Split the dataset into a training set and a testing set
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions on the testing set
y_pred = model.predict(X_test)

# Calculate the mean squared error of the predictions
mse = mean_squared_error(y_test, y_pred)
print(f"Mean Squared Error: {mse}")
